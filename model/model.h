#ifndef NEUTON_MODEL_MODEL_H
#define NEUTON_MODEL_MODEL_H

#ifdef __cplusplus
extern "C"
{
#endif

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 3
#define NEUTON_MODEL_QLEVEL 8
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 118
#define NEUTON_MODEL_WEIGHTS_COUNT 772
#define NEUTON_MODEL_INPUTS_COUNT 450
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 1
#define NEUTON_MODEL_OUTPUTS_COUNT 15
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0
#define NEUTON_MODEL_HAS_CLASSES_RATIO 0
#define NEUTON_MODEL_HAS_NEGPOS_RATIO 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_DROP_ORIGINAL_FEATURES 0
#define NEUTON_BITMASK_ENABLED 1
#define NEUTON_INPUTS_IS_INTEGER 0
#define NEUTON_MODEL_SA_PRECISION 24

/* Types */
typedef float input_t;
typedef float extracted_feature_t;
typedef uint8_t coeff_t;
typedef int8_t weight_t;
typedef int32_t acc_signed_t;
typedef uint32_t acc_unsigned_t;
typedef uint16_t sources_size_t;
typedef uint16_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Limits */
static const input_t modelInputMin[] = { 0 };
static const input_t modelInputMax[] = { 89543 };

static const uint8_t modelUsedInputsMask[] = {
	0xff, 0xfd, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xed, 0xdf, 0x58, 0x75,
	0xde, 0x4f, 0x02, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

/* Structure */
static const weight_t modelWeights[] = {
	-91, 110, -67, -128, -128, 118, -100, 97, -113, -41, -72, 125, 106, -101,
	109, 60, -3, -3, 126, -94, 127, -95, 62, 1, 123, -110, -108, -9, -52, 101,
	119, 66, -127, 33, 20, 62, -28, 118, -98, 14, -39, 123, 11, -128, 61, -65,
	-2, 61, 61, -12, 50, -128, 118, 120, 10, -35, -103, -14, 72, 6, 85, -31,
	-123, 115, 60, -100, 22, -65, 124, 61, -65, 124, -2, -74, 33, -128, 113,
	19, 26, 20, -128, 84, -16, -61, 44, -90, -74, 88, 33, 106, 84, -46, -113,
	122, 53, 63, -1, -128, 61, -2, -128, -128, -65, -104, -128, 89, -11, -18,
	89, -2, -2, -2, -128, -128, -2, 109, -32, -113, -128, 77, -3, 55, -99,
	-118, -105, -128, 125, -85, -97, 36, -120, -94, -28, 107, 113, 45, -40,
	108, -116, -116, -128, -2, -13, -71, 84, -128, 124, 9, 123, -128, 19, 41,
	59, 93, 0, -23, -57, -71, 110, -128, -6, 63, 125, -85, 52, -128, 11, -128,
	45, -62, -64, -128, 73, -125, -108, -49, -1, -104, 124, -125, -128, -128,
	-14, -19, -128, -128, 7, -128, 88, -128, -94, -122, 10, -35, 126, -56,
	-49, 0, -6, 10, 84, -32, -79, 13, -9, -53, 122, -8, -46, 78, -57, 66, -21,
	-128, -25, -94, 50, -128, 64, 77, -128, -128, -35, -128, -12, -3, -128,
	60, 3, -3, -112, -7, -94, 124, 0, -6, -110, -28, -103, 123, 21, 59, 84,
	-118, -2, -34, 64, 34, -49, 124, -42, 40, -44, -84, 25, -126, 125, 24,
	84, -95, 5, 104, 30, -86, -128, 96, 32, -25, 123, -87, -128, -107, 125,
	23, 84, -32, 113, 119, -128, -128, -67, -128, -43, -122, 125, -85, 125,
	-117, 50, 125, -46, 32, -128, -2, -128, 56, -101, 124, 125, -128, 77, -121,
	122, 30, -77, -128, -5, -3, -101, 97, -128, 127, -23, 5, -35, -2, -128,
	-126, -128, -128, -128, 1, 0, -42, -107, 21, -128, -128, 124, -116, 120,
	56, -80, 124, 4, -128, -128, -32, -128, 125, -3, 79, -80, 120, -50, 43,
	-109, -5, 118, -94, 37, -128, -77, 123, -115, -12, 99, -128, -3, -69, -128,
	-114, -95, 62, -36, 25, -128, -122, 121, -125, -124, -128, 101, 42, 32,
	-128, 118, -67, -128, -52, -128, -84, 123, -85, 85, 54, -59, -81, 77, -121,
	-4, -115, 123, -128, 89, 36, -128, 10, -115, 126, 12, -128, -58, 84, 87,
	-97, 46, 75, 1, -82, -128, 109, 34, -128, -3, -128, -128, -128, 124, -128,
	-2, -28, -18, -93, 12, 61, -96, 37, 127, -17, 6, -121, -16, -90, 126, 95,
	-108, -127, 114, 17, -128, -128, -6, -2, -56, 0, -125, 68, -128, 90, 58,
	-98, 93, 20, 109, -83, -128, -128, 75, -128, -128, -22, 17, 71, 28, -60,
	-128, -7, -3, 125, -2, 3, -79, -25, 47, 3, -128, 113, -128, 63, -116, -128,
	-33, -19, -128, 12, -104, 25, 40, -92, 63, 26, -3, 107, -32, -34, -92,
	-12, -70, -103, 105, -128, -123, -2, -128, -2, -42, -128, -104, -128, 77,
	64, 16, 14, 4, -122, -114, 123, 80, 67, -3, 122, -59, -32, 109, -3, -65,
	-128, -2, -128, -128, -2, -28, 1, -72, 75, 28, 92, 10, -105, 36, -128,
	-68, 93, 125, -100, -70, 85, -20, -128, 81, -128, -128, 110, -128, -128,
	-31, -2, 61, -65, -65, -128, 124, 0, 123, -24, 124, -59, 89, -40, -64,
	-29, -51, 125, -97, -128, -78, 58, -65, 57, -118, 117, -127, -100, -87,
	125, 41, -123, 89, -108, -73, -128, 117, 3, -128, -51, -48, -116, 122,
	-62, 124, 32, -70, 109, -2, -36, -61, -128, -125, -111, 34, -128, 61, -2,
	-65, -128, -2, 109, 125, -125, -5, -121, 65, -3, -34, -118, -128, -84,
	-128, 40, -112, 24, 3, -125, 0, 0, -15, -128, -128, 121, 61, -101, -69,
	-77, 125, 109, -52, -128, -128, 98, -35, 36, -65, -2, -2, 61, -2, -2, -86,
	-85, -118, -87, 74, 8, -51, -103, -97, -128, 81, 38, 71, -33, 89, -98,
	41, 99, -110, -12, -128, -128, -65, -128, -128, -2, -128, 122, 12, 83,
	-128, -97, -60, 31, -112, 72, -125, -124, 89, -128, 81, 88, -98, -72, -128,
	-128, -128, -68, -128, 125, -83, -128, -128, -102, -65, 72, 47, -46, 75,
	-29, -100, -128, 123, -62, -92, -92, -58, -89, -128, -128, 76, -122, 78,
	-2, -65, -128, 61, -65, 61, 124, -65, -128, 124, -128, -65, -19, 80, -72,
	45, -128, -128, -128, -128, -128, 19, 121, -113, -128, 105, -128, -98,
	-118, 37, 125, 118, -128, 125, -128, 124, 76, 27, -33, -128, -61 };

static const sources_size_t modelLinks[] = {
	1, 16, 20, 34, 76, 450, 0, 15, 43, 50, 59, 450, 12, 15, 37, 38, 54, 450,
	2, 3, 12, 20, 54, 450, 7, 8, 28, 34, 44, 450, 1, 2, 3, 15, 18, 20, 450,
	1, 4, 13, 17, 44, 450, 1, 10, 20, 25, 35, 450, 4, 2, 30, 34, 99, 450, 1,
	1, 4, 25, 52, 450, 9, 0, 26, 30, 36, 450, 0, 2, 20, 32, 50, 450, 14, 21,
	31, 33, 37, 450, 12, 15, 19, 26, 39, 450, 2, 5, 1, 16, 29, 450, 0, 6, 33,
	43, 64, 450, 0, 2, 36, 64, 83, 450, 8, 24, 42, 64, 71, 450, 10, 11, 19,
	32, 110, 450, 30, 35, 36, 113, 125, 450, 17, 16, 19, 47, 73, 450, 4, 20,
	450, 0, 1, 2, 3, 22, 450, 0, 14, 6, 7, 73, 450, 2, 34, 37, 51, 66, 450,
	16, 14, 30, 47, 76, 97, 450, 23, 4, 34, 36, 121, 450, 22, 23, 21, 29, 57,
	450, 8, 24, 32, 52, 125, 450, 9, 27, 51, 93, 100, 450, 10, 23, 29, 3, 17,
	61, 79, 450, 30, 12, 31, 53, 71, 450, 1, 28, 36, 38, 42, 450, 31, 11, 17,
	34, 56, 450, 1, 10, 17, 19, 29, 450, 10, 2, 27, 47, 58, 450, 33, 45, 60,
	71, 110, 450, 29, 21, 49, 53, 58, 92, 450, 36, 57, 67, 72, 94, 450, 11,
	16, 26, 36, 70, 450, 0, 1, 2, 3, 58, 450, 17, 26, 33, 2, 23, 34, 450, 4,
	10, 28, 36, 43, 105, 450, 0, 1, 2, 3, 37, 450, 0, 7, 42, 29, 47, 93, 450,
	4, 38, 35, 113, 121, 450, 5, 19, 45, 50, 74, 450, 24, 33, 37, 39, 88, 105,
	450, 5, 13, 42, 5, 7, 106, 450, 39, 46, 3, 8, 107, 450, 0, 1, 2, 3, 28,
	46, 450, 10, 12, 25, 43, 28, 47, 54, 450, 0, 1, 2, 4, 39, 36, 450, 7, 43,
	25, 56, 69, 450, 45, 52, 10, 67, 73, 450, 24, 38, 47, 52, 71, 450, 1, 9,
	10, 76, 107, 450, 47, 52, 78, 102, 104, 450, 50, 51, 57, 60, 79, 450, 0,
	2, 3, 4, 25, 42, 71, 450, 1, 26, 39, 31, 51, 450, 56, 1, 13, 19, 31, 450,
	0, 1, 2, 3, 4, 450, 11, 26, 61, 62, 450, 61, 10, 29, 44, 59, 84, 450, 46,
	54, 0, 19, 98, 450, 10, 49, 61, 71, 86, 450, 39, 42, 55, 86, 103, 450,
	0, 1, 2, 3, 45, 28, 45, 450, 0, 1, 2, 3, 24, 54, 450, 58, 24, 29, 42, 61,
	62, 450, 0, 1, 2, 3, 53, 90, 450, 1, 3, 4, 5, 41, 450, 10, 15, 30, 31,
	32, 35, 36, 37, 38, 39, 55, 56, 57, 58, 72, 450, 0, 1, 2, 3, 24, 0, 52,
	450, 38, 39, 41, 65, 110, 450, 4, 24, 10, 25, 55, 450, 0, 2, 3, 6, 34,
	47, 450, 24, 25, 34, 44, 72, 63, 450, 3, 19, 45, 74, 77, 78, 450, 0, 1,
	2, 3, 24, 38, 450, 13, 18, 44, 46, 44, 450, 26, 38, 69, 72, 62, 450, 0,
	2, 3, 4, 72, 12, 450, 3, 1, 15, 16, 20, 450, 0, 1, 2, 3, 74, 450, 29, 51,
	75, 2, 99, 450, 0, 1, 2, 3, 49, 59, 450, 38, 1, 27, 43, 75, 450, 7, 23,
	33, 54, 70, 71, 88, 450, 0, 1, 2, 3, 6, 450, 5, 90, 450, 0, 1, 2, 3, 29,
	450, 0, 1, 2, 3, 16, 450, 28, 66, 36, 50, 84, 450, 12, 27, 44, 50, 94,
	450, 40, 51, 80, 3, 75, 450, 54, 33, 40, 53, 56, 86, 450, 1, 17, 42, 52,
	59, 93, 97, 450, 1, 3, 4, 5, 49, 56, 80, 450, 0, 1, 2, 3, 24, 450, 13,
	28, 68, 87, 100, 450, 1, 2, 3, 4, 15, 450, 8, 24, 34, 40, 43, 46, 47, 48,
	49, 85, 86, 102, 450, 0, 1, 2, 3, 10, 19, 450, 8, 59, 102, 32, 70, 450,
	55, 16, 18, 59, 75, 450, 0, 1, 2, 3, 6, 33, 450, 2, 18, 83, 107, 450, 0,
	1, 2, 3, 42, 450, 14, 29, 84, 99, 109, 450, 0, 1, 2, 3, 57, 59, 67, 450,
	9, 25, 53, 69, 80, 81, 82, 111, 450, 0, 1, 2, 3, 56, 450, 0, 1, 2, 3, 27,
	450, 0, 16, 41, 64, 65, 66, 67, 113, 114, 450, 6, 8, 58, 20, 122, 450,
	6, 22, 51, 60, 75, 76, 92, 96, 104, 105, 106, 116, 450 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 6, 12, 18, 24, 30, 37, 43, 50, 56, 62, 67, 73, 80, 87, 93, 99, 104,
	110, 115, 122, 129, 134, 138, 143, 149, 156, 163, 167, 175, 182, 188, 194,
	200, 205, 212, 217, 224, 230, 238, 246, 251, 257, 267, 271, 277, 283, 290,
	297, 303, 312, 318, 327, 331, 337, 345, 349, 353, 362, 371, 376, 380, 389,
	395, 397, 405, 410, 417, 426, 433, 437, 447, 455, 471, 477, 484, 488, 497,
	504, 512, 518, 524, 530, 537, 540, 550, 554, 562, 565, 577, 583, 586, 591,
	597, 601, 610, 614, 618, 631, 639, 644, 651, 656, 670, 677, 681, 685, 696,
	701, 706, 713, 721, 730, 736, 742, 752, 756, 771 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 12, 18, 24, 30, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103, 109,
	115, 121, 127, 130, 136, 142, 148, 155, 161, 167, 173, 179, 187, 193, 199,
	205, 211, 217, 223, 230, 236, 242, 248, 255, 262, 268, 275, 281, 287, 294,
	301, 307, 314, 322, 329, 335, 341, 347, 353, 359, 365, 373, 379, 385, 391,
	396, 403, 409, 415, 421, 429, 436, 443, 450, 456, 472, 480, 486, 492, 499,
	506, 513, 520, 526, 532, 539, 545, 551, 557, 564, 570, 578, 584, 587, 593,
	599, 605, 611, 617, 624, 632, 640, 646, 652, 658, 671, 678, 684, 690, 697,
	702, 708, 714, 722, 731, 737, 743, 753, 759, 772 };

static const coeff_t modelFuncCoeffs[] = {
	121, 79, 141, 144, 117, 69, 147, 65, 157, 106, 24, 157, 157, 97, 104, 58,
	156, 158, 157, 160, 135, 60, 137, 128, 146, 151, 75, 123, 132, 122, 142,
	157, 157, 107, 157, 160, 146, 126, 144, 157, 112, 131, 157, 157, 157, 144,
	160, 76, 133, 157, 160, 134, 107, 160, 146, 141, 148, 157, 37, 141, 147,
	144, 156, 52, 103, 109, 152, 157, 122, 157, 157, 117, 157, 160, 156, 70,
	154, 141, 160, 105, 160, 95, 151, 19, 158, 101, 73, 157, 143, 133, 140,
	62, 158, 124, 157, 85, 128, 145, 90, 57, 141, 146, 146, 80, 20, 79, 144,
	155, 158, 1, 158, 50, 157, 134, 157, 160, 118, 157 };
static const uint8_t modelFuncTypes[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const neurons_size_t modelOutputNeurons[] = {
	115, 98, 108, 79, 21, 91, 117, 89, 103, 112, 73, 63, 95, 101, 110 };

#ifdef __cplusplus
}
#endif

#endif // NEUTON_MODEL_MODEL_H

